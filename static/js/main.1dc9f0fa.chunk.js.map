{"version":3,"sources":["styles/Averages.module.css","styles/Weights.module.css","styles/Graph.module.css","styles/WeightInput.module.css","components/Averages.js","utilities/average.js","components/Graph.js","components/WeightInput.js","components/Weights.js","components/App.js","utilities/storage.js","serviceWorker.js","index.js"],"names":["module","exports","box","month","date","label","value","weight","time","deleteButton","weights","normal","minor","major","title","input","Averages","_ref","_useState","useState","_useState2","Object","slicedToArray","months","setMonths","Date","useEffect","months0","byMonth","reduce","year","getFullYear","getMonth","monthLabel","concat","slice","toConsumableArray","values","groupByMonth","months2","map","diffsSum","parseFloat","average","sum","diff","stdDev","Math","sqrt","count","computeStdDevs","length","objectSpread","react_default","a","createElement","className","styles","reverse","key","setMonth","toLocaleString","toFixed","Weights","timeScale","graph","setGraph","timeToX","ranges","timeMin","weightToY","weightRange","weightMin","drawGraph","weightsPath","path","index","x","y","getWeightsPath","height","viewBox","timeRange","d","round","lines","line","lineClass","x1","y1","x2","y2","drawWeightLines","timeMax","dateMin","setHours","setMinutes","setSeconds","setMilliseconds","getDate","getTime","setDate","drawTimeLines","limits","weightPadding","weightMax","findRanges","initialValue","Infinity","wgt","findLimits","WeightInput","saveWeight","setValue","day","weekday","hour","minute","id","type","min","max","step","onChange","e","target","onKeyUp","keyCode","deleteWeight","onClick","buildWeight","App","_useLocalStorage","stored","window","localStorage","getItem","JSON","parse","err","console","error","setItem","stringify","useLocalStorage","_useLocalStorage2","setWeights","components_WeightInput","now","components_Weights","filter","components_Averages","Graph","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dc9f0fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Averages_box__26Sjt\",\"month\":\"Averages_month__25tZa\",\"date\":\"Averages_date__3Y9ER\",\"label\":\"Averages_label__lNs6N\",\"value\":\"Averages_value__3X4k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Weights_box__2JWc0\",\"value\":\"Weights_value__3DwNj\",\"weight\":\"Weights_weight__1ufNe\",\"time\":\"Weights_time__35D-9\",\"deleteButton\":\"Weights_deleteButton__2Keu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Graph_box__3lZbO\",\"weights\":\"Graph_weights__nWRpu\",\"normal\":\"Graph_normal__fmLIr\",\"minor\":\"Graph_minor__10MWi\",\"major\":\"Graph_major__3_RfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"WeightInput_box__3Ps7C\",\"title\":\"WeightInput_title__1J5ME\",\"input\":\"WeightInput_input__1TNok\",\"time\":\"WeightInput_time__33S0W\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Averages.module.css';\nimport { groupByMonth, computeAverages, computeStdDevs } from '../utilities/average';\n\n\nfunction Averages({ weights }) {\n  const [months, setMonths] = useState([]);\n  const date = new Date();\n\n  useEffect(() => {\n    const months0 = groupByMonth(weights);\n    const months1 = computeAverages(months0);\n    const months2 = computeStdDevs(months1);\n    setMonths(months2);\n  }, [weights]);\n\n  return (\n    <section className='averagesSection'>\n      <div className={styles.box}>\n        <ul>\n          {months.slice(0).reverse().map((value) => (\n            <li key={`${value.year}_${value.month}`}>\n              <div className={styles.month}>\n                <div className={styles.date}>\n                  {(new Date(date.setMonth(value.month - 1))).toLocaleString('en', { month: 'long' })} {value.year}\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Average\n                  </span>\n                  <span className={styles.value}>\n                    {value.average.toFixed(1)}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Measurements\n                  </span>\n                  <span className={styles.value}>\n                    {value.count}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Std Dev\n                  </span>\n                  <span className={styles.value}>\n                    {value.stdDev.toFixed(1)}\n                  </span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\n\nAverages.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Averages;\n","export function groupByMonth(weights) {\n  const byMonth = weights.reduce((byMonth, weight) => {\n    const date = new Date(weight.time);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const monthLabel = `0${month}`.slice(0, 2);\n    const label = `${year}_${monthLabel}`;\n\n    if (!byMonth[label]) {\n      byMonth[label] = {\n        year,\n        month,\n        weights: [],\n      };\n    }\n    byMonth[label].weights = [...byMonth[label].weights, weight];\n    return byMonth;\n  }, {});\n\n  return Object.values(byMonth);\n}\n\nexport function computeAverages(months) {\n  return months.map((month) => {\n    const sum = month.weights.reduce((sum, weight) => sum + parseFloat(weight.weight, 10), 0);\n    const count = month.weights.length;\n    const average = sum / count;\n    return {\n      ...month,\n      count,\n      average,\n    };\n  });\n}\n\nexport function computeStdDevs(months) {\n  return months.map((month) => {\n    const diffs = month.weights.map((weight) => parseFloat(weight.weight, 10) - month.average);\n    const diffsSum = diffs.reduce((sum, diff) => sum + (diff * diff), 0);\n    const stdDev = Math.sqrt(diffsSum / month.count);\n    return {\n      year: month.year,\n      month: month.month,\n      count: month.count,\n      average: month.average,\n      stdDev,\n    };\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Graph.module.css';\n\n\nfunction Weights({ weights }) {\n  const oneDay = 1000 * 60 * 60 * 24;\n  const timeScale = 4 * oneDay;\n  const [graph, setGraph] = useState(null);\n\n  function findLimits(weights) {\n    const initialValue = {\n      timeMin: Infinity,\n      timeMax: 0,\n      weightMin: Infinity,\n      weightMax: 0,\n    };\n    return weights.reduce((limits, weight) => {\n      limits.timeMin = (weight.time < limits.timeMin) ? weight.time : limits.timeMin;\n      limits.timeMax = (weight.time > limits.timeMax) ? weight.time : limits.timeMax;\n      const wgt = parseFloat(weight.weight, 10);\n      limits.weightMin = (wgt < limits.weightMin) ? wgt : limits.weightMin;\n      limits.weightMax = (wgt > limits.weightMax) ? wgt : limits.weightMax;\n      return limits;\n    }, initialValue);\n  }\n\n  function findRanges(limits) {\n    const range = limits.weightMax - limits.weightMin;\n    const weightPadding = 0.1 * range;\n    const weightMin = limits.weightMin - weightPadding;\n    const weightMax = limits.weightMax + weightPadding;\n    const weightRange = weightMax - weightMin;\n    const timeMin = limits.timeMin / timeScale;\n    const timeMax = limits.timeMax / timeScale;\n    const timeRange = timeMax - timeMin;\n\n    return {\n      weightMin,\n      weightRange,\n      timeMin,\n      timeRange,\n    };\n  }\n\n  function timeToX(time, ranges) {\n    return (time / timeScale) - ranges.timeMin;\n  }\n\n  function weightToY(weight, ranges) {\n    const value = parseFloat(weight, 10);\n    return ranges.weightRange + ranges.weightMin - value;\n  }\n\n  function drawTimeLines(ranges) {\n    const timeMin = timeScale * ranges.timeMin;\n    const timeMax = timeScale * (ranges.timeMin + ranges.timeRange);\n    const dateMin = new Date(timeMin);\n    const date = new Date(timeMax);\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    let lines = [];\n    while (date >= dateMin) {\n      let lineClass = 'normal';\n      if (date.getDate() === 1) {\n        if (date.getMonth() === 0) {\n          lineClass = 'major';\n        } else {\n          lineClass = 'minor';\n        }\n      }\n      const x = timeToX(date.getTime(), ranges);\n      lines = [...lines, [x, lineClass]];\n      date.setDate(date.getDate() - 1);\n    }\n    return lines.map((value) => {\n      return (\n        <line key={value[0]} x1={value[0]} y1='0' x2={value[0]} y2={ranges.weightRange} className={styles[value[1]]}/>\n      );\n    });\n  }\n\n  function drawWeightLines(ranges) {\n    let value = Math.round(ranges.weightMin + ranges.weightRange);\n    let lines = [];\n    while (value >= ranges.weightMin) {\n      lines = [...lines, value];\n      value -= 1;\n    }\n    return lines.map((line) => {\n      let lineClass = 'normal';\n      if ((line % 10) === 0) {\n        lineClass = 'major';\n      } else if ((line % 5) === 0) {\n        lineClass = 'minor';\n      }\n      const y = weightToY(line, ranges);\n      return (\n        <line key={y} x1='0' y1={y} x2={ranges.timeRange} y2={y} className={styles[lineClass]}/>\n      );\n    });\n  }\n\n  function getWeightsPath(weights, ranges) {\n    return weights.reduce((path, value, index) => {\n      const x = timeToX(value.time, ranges);\n      const y = weightToY(value.weight, ranges);\n      path += (index === 0) ? 'M ' : 'L ';\n      path += `${x.toFixed(2)} ${y.toFixed(2)}`;\n      return path;\n    }, '');\n  }\n\n  function drawGraph(weights, ranges) {\n    const weightsPath = getWeightsPath(weights, ranges);\n    return (\n      <svg height='100%' viewBox={`0 0 ${ranges.timeRange} ${ranges.weightRange}`}>\n        <path d={weightsPath} className={styles.weights} />\n        {drawWeightLines(ranges)}\n        {drawTimeLines(ranges)}\n      </svg>\n    );\n  }\n\n  useEffect(() => {\n    const limits = findLimits(weights);\n    const ranges = findRanges(limits);\n    setGraph(drawGraph(weights, ranges));\n  }, [weights]);\n\n  return (\n    <section className='graphSection'>\n      <div className={styles.box}>\n        {graph}\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Weights;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/WeightInput.module.css';\n\n\nfunction WeightInput({ saveWeight }) {\n  const [value, setValue] = useState('');\n  const date = new Date();\n  const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n  const timeOptions = { hour: 'numeric', minute: '2-digit' };\n  const day = date.toLocaleString('en-us', dayOptions);\n  const time = date.toLocaleString('en-us', timeOptions);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      saveWeight(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <section className='weightInputSection'>\n      <div className={styles.box}>\n        <div className={styles.title}>\n          Add Current Weight\n        </div>\n        <div className={styles.input}>\n          <div>\n            <input\n              id='yo'\n              type='number'\n              min='0'\n              max='1000'\n              step='0.1'\n              value={value}\n              onChange={handleChange}\n              onKeyUp={handleKeyUp}\n            />\n          </div>\n          <div className={styles.time}>\n            <div>{day}</div>\n            <div>{time}</div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nWeightInput.propTypes = {\n  saveWeight: PropTypes.func,\n};\n\nexport default WeightInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Weights.module.css';\n\n\nfunction Weights({ weights, deleteWeight }) {\n  function buildWeight(value) {\n    const date = new Date(value.time);\n    const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n    const timeOptions = { hour: 'numeric', minute: '2-digit' };\n    const day = date.toLocaleString('en-us', dayOptions);\n    const time = date.toLocaleString('en-us', timeOptions);\n\n    return (\n      <div key={value.time} className={styles.value}>\n        <div className={styles.weight}>\n          {value.weight}\n        </div>\n        <div className={styles.time}>\n          <div>\n            {day}\n          </div>\n          <div>\n            {time}\n          </div>\n        </div>\n        <div>\n          <button\n            className={styles.deleteButton}\n            onClick={() => deleteWeight(value.time)}\n          >\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className='weightsSection'>\n      <div className={styles.box}>\n        { weights.slice(0).reverse().map((value) => buildWeight(value)) }\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n  deleteWeight: PropTypes.func,\n};\n\nexport default Weights;\n","import React from 'react';\nimport { useLocalStorage } from '../utilities/storage';\nimport Averages from './Averages';\nimport Graph from './Graph';\nimport WeightInput from './WeightInput';\nimport Weights from './Weights';\n\n\nfunction App() {\n  const [weights, setWeights] = useLocalStorage('weights', []);\n\n  function saveWeight(value) {\n    setWeights([...weights, {\n      time: Date.now(),\n      weight: value,\n    }]);\n  }\n\n  function deleteWeight(time) {\n    setWeights(weights.filter((value) => value.time !== time));\n  }\n\n  return (\n    <main className='page'>\n      <WeightInput\n        saveWeight={saveWeight}\n      />\n      <Weights\n        weights={weights}\n        deleteWeight={deleteWeight}\n      />\n      <div className='spacer'></div>\n      <Averages\n        weights={weights}\n      />\n      <div className='spacer'></div>\n      <Graph\n        weights={weights}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const stored = window.localStorage.getItem(key);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (err) {\n        console.error('localStorage error:', key, stored, err);\n      }\n    }\n    window.localStorage.setItem(key, JSON.stringify(initialValue));\n    return initialValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}