{"version":3,"sources":["styles/Averages.module.css","styles/WeightInput.module.css","styles/Weights.module.css","styles/Graph.module.css","components/Averages.js","utilities/average.js","components/Graph.js","components/WeightInput.js","components/Weights.js","components/App.js","utilities/storage.js","utilities/file.js","serviceWorker.js","index.js"],"names":["module","exports","box","month","date","label","value","content","title","input","time","exportButton","weight","deleteButton","weights","normal","minor","major","year","Averages","_ref","_useState","useState","_useState2","Object","slicedToArray","months","setMonths","Date","useEffect","months0","byMonth","reduce","getFullYear","getMonth","monthLabel","concat","slice","toConsumableArray","values","groupByMonth","months2","map","diffsSum","parseFloat","average","sum","diff","stdDev","Math","sqrt","count","computeStdDevs","length","objectSpread","react_default","a","createElement","className","styles","reverse","key","setMonth","toLocaleString","toFixed","Weights","timeScale","graph","setGraph","timeToX","ranges","timeMin","weightToY","weightRange","weightMin","drawGraph","weightsPath","path","index","x","y","getWeightsPath","height","viewBox","timeRange","d","round","lines","line","lineClass","x1","y1","x2","y2","drawWeightLines","timeMax","dateMin","setHours","setMinutes","setSeconds","setMilliseconds","getDate","getDay","getTime","setDate","drawTimeLines","scrollLeft","graphBox","document","getElementById","scrollWidth","limits","weightPadding","weightMax","findRanges","initialValue","Infinity","wgt","findLimits","setTimeout","id","WeightInput","saveWeight","exportWeights","setValue","day","weekday","hour","minute","type","min","max","step","onChange","e","target","onKeyUp","keyCode","onClick","deleteWeight","buildWeight","App","_useLocalStorage","stored","window","localStorage","getItem","JSON","parse","err","console","error","setItem","stringify","useLocalStorage","_useLocalStorage2","setWeights","components_WeightInput","now","data","blob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","saveData","components_Weights","filter","components_Averages","Graph","Boolean","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a310eb9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Averages_box__26Sjt\",\"month\":\"Averages_month__25tZa\",\"date\":\"Averages_date__3Y9ER\",\"label\":\"Averages_label__lNs6N\",\"value\":\"Averages_value__3X4k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"WeightInput_box__3Ps7C\",\"content\":\"WeightInput_content__3GQeI\",\"title\":\"WeightInput_title__1J5ME\",\"input\":\"WeightInput_input__1TNok\",\"time\":\"WeightInput_time__33S0W\",\"exportButton\":\"WeightInput_exportButton__1bz5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Weights_box__2JWc0\",\"value\":\"Weights_value__3DwNj\",\"weight\":\"Weights_weight__1ufNe\",\"time\":\"Weights_time__35D-9\",\"deleteButton\":\"Weights_deleteButton__2Keu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Graph_box__3lZbO\",\"weights\":\"Graph_weights__nWRpu\",\"normal\":\"Graph_normal__fmLIr\",\"minor\":\"Graph_minor__10MWi\",\"major\":\"Graph_major__3_RfE\",\"year\":\"Graph_year__32fq3\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Averages.module.css';\nimport { groupByMonth, computeAverages, computeStdDevs } from '../utilities/average';\n\n\nfunction Averages({ weights }) {\n  const [months, setMonths] = useState([]);\n  const date = new Date();\n\n  useEffect(() => {\n    const months0 = groupByMonth(weights);\n    const months1 = computeAverages(months0);\n    const months2 = computeStdDevs(months1);\n    setMonths(months2);\n  }, [weights]);\n\n  return (\n    <section className='averagesSection'>\n      <div className={styles.box}>\n        <ul>\n          {months.slice(0).reverse().map((value) => (\n            <li key={`${value.year}_${value.month}`}>\n              <div className={styles.month}>\n                <div className={styles.date}>\n                  {(new Date(date.setMonth(value.month - 1))).toLocaleString('en', { month: 'long' })} {value.year}\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Average\n                  </span>\n                  <span className={styles.value}>\n                    {value.average.toFixed(1)}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Measurements\n                  </span>\n                  <span className={styles.value}>\n                    {value.count}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Std Dev\n                  </span>\n                  <span className={styles.value}>\n                    {value.stdDev.toFixed(1)}\n                  </span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\n\nAverages.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Averages;\n","export function groupByMonth(weights) {\n  const byMonth = weights.reduce((byMonth, weight) => {\n    const date = new Date(weight.time);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const monthLabel = `0${month}`.slice(0, 2);\n    const label = `${year}_${monthLabel}`;\n\n    if (!byMonth[label]) {\n      byMonth[label] = {\n        year,\n        month,\n        weights: [],\n      };\n    }\n    byMonth[label].weights = [...byMonth[label].weights, weight];\n    return byMonth;\n  }, {});\n\n  return Object.values(byMonth);\n}\n\nexport function computeAverages(months) {\n  return months.map((month) => {\n    const sum = month.weights.reduce((sum, weight) => sum + parseFloat(weight.weight, 10), 0);\n    const count = month.weights.length;\n    const average = sum / count;\n    return {\n      ...month,\n      count,\n      average,\n    };\n  });\n}\n\nexport function computeStdDevs(months) {\n  return months.map((month) => {\n    const diffs = month.weights.map((weight) => parseFloat(weight.weight, 10) - month.average);\n    const diffsSum = diffs.reduce((sum, diff) => sum + (diff * diff), 0);\n    const stdDev = Math.sqrt(diffsSum / month.count);\n    return {\n      year: month.year,\n      month: month.month,\n      count: month.count,\n      average: month.average,\n      stdDev,\n    };\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Graph.module.css';\n\n\nfunction Weights({ weights }) {\n  const oneDay = 1000 * 60 * 60 * 24;\n  const timeScale = 4 * oneDay;\n  const [graph, setGraph] = useState(null);\n\n  function findLimits(weights) {\n    const initialValue = {\n      timeMin: Infinity,\n      timeMax: 0,\n      weightMin: Infinity,\n      weightMax: 0,\n    };\n    return weights.reduce((limits, weight) => {\n      limits.timeMin = (weight.time < limits.timeMin) ? weight.time : limits.timeMin;\n      limits.timeMax = (weight.time > limits.timeMax) ? weight.time : limits.timeMax;\n      const wgt = parseFloat(weight.weight, 10);\n      limits.weightMin = (wgt < limits.weightMin) ? wgt : limits.weightMin;\n      limits.weightMax = (wgt > limits.weightMax) ? wgt : limits.weightMax;\n      return limits;\n    }, initialValue);\n  }\n\n  function findRanges(limits) {\n    const range = limits.weightMax - limits.weightMin;\n    const weightPadding = 0.1 * range;\n    const weightMin = limits.weightMin - weightPadding;\n    const weightMax = limits.weightMax + weightPadding;\n    const weightRange = weightMax - weightMin;\n    const timeMin = limits.timeMin / timeScale;\n    const timeMax = limits.timeMax / timeScale;\n    const timeRange = timeMax - timeMin;\n\n    return {\n      weightMin,\n      weightRange,\n      timeMin,\n      timeRange,\n    };\n  }\n\n  function timeToX(time, ranges) {\n    return (time / timeScale) - ranges.timeMin;\n  }\n\n  function weightToY(weight, ranges) {\n    const value = parseFloat(weight, 10);\n    return ranges.weightRange + ranges.weightMin - value;\n  }\n\n  function drawTimeLines(ranges) {\n    const timeMin = timeScale * ranges.timeMin;\n    const timeMax = timeScale * (ranges.timeMin + ranges.timeRange);\n    const dateMin = new Date(timeMin);\n    const date = new Date(timeMax);\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    let lines = [];\n    while (date >= dateMin) {\n      let lineClass = 'normal';\n      if (date.getDate() === 1) {\n        if (date.getMonth() === 0) {\n          lineClass = 'year';\n        } else {\n          lineClass = 'major';\n        }\n      }\n      if (date.getDay() === 0) {\n        lineClass = 'minor';\n      }\n      const x = timeToX(date.getTime(), ranges);\n      lines = [...lines, [x, lineClass]];\n      date.setDate(date.getDate() - 1);\n    }\n    return lines.map((value) => {\n      return (\n        <line key={value[0]} x1={value[0]} y1='0' x2={value[0]} y2={ranges.weightRange} className={styles[value[1]]}/>\n      );\n    });\n  }\n\n  function drawWeightLines(ranges) {\n    let value = Math.round(ranges.weightMin + ranges.weightRange);\n    let lines = [];\n    while (value >= ranges.weightMin) {\n      lines = [...lines, value];\n      value -= 1;\n    }\n    return lines.map((line) => {\n      let lineClass = 'normal';\n      if ((line % 10) === 0) {\n        lineClass = 'major';\n      } else if ((line % 5) === 0) {\n        lineClass = 'minor';\n      }\n      const y = weightToY(line, ranges);\n      return (\n        <line key={y} x1='0' y1={y} x2={ranges.timeRange} y2={y} className={styles[lineClass]}/>\n      );\n    });\n  }\n\n  function getWeightsPath(weights, ranges) {\n    return weights.reduce((path, value, index) => {\n      const x = timeToX(value.time, ranges);\n      const y = weightToY(value.weight, ranges);\n      path += (index === 0) ? 'M ' : 'L ';\n      path += `${x.toFixed(2)} ${y.toFixed(2)}`;\n      return path;\n    }, '');\n  }\n\n  function drawGraph(weights, ranges) {\n    const weightsPath = getWeightsPath(weights, ranges);\n    return (\n      <svg height='100%' viewBox={`0 0 ${ranges.timeRange} ${ranges.weightRange}`}>\n        <path d={weightsPath} className={styles.weights} />\n        {drawWeightLines(ranges)}\n        {drawTimeLines(ranges)}\n      </svg>\n    );\n  }\n\n  function scrollLeft() {\n    var graphBox = document.getElementById('graphBox');\n    graphBox.scrollLeft += graphBox.scrollWidth;\n  }\n\n  useEffect(() => {\n    const limits = findLimits(weights);\n    const ranges = findRanges(limits);\n    setGraph(drawGraph(weights, ranges));\n    setTimeout(scrollLeft, 0);\n  }, [weights]);\n\n  return (\n    <section className='graphSection'>\n      <div id='graphBox' className={styles.box}>\n        {graph}\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Weights;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/WeightInput.module.css';\n\n\nfunction WeightInput({ saveWeight, exportWeights }) {\n  const [value, setValue] = useState('');\n  const date = new Date();\n  const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n  const timeOptions = { hour: 'numeric', minute: '2-digit' };\n  const day = date.toLocaleString('en-us', dayOptions);\n  const time = date.toLocaleString('en-us', timeOptions);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      saveWeight(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <section className='weightInputSection'>\n      <div className={styles.box}>\n        <div>\n          <div className={styles.title}>\n            Add Current Weight\n          </div>\n          <div className={styles.input}>\n            <div>\n              <input\n                id='yo'\n                type='number'\n                min='0'\n                max='1000'\n                step='0.1'\n                value={value}\n                onChange={handleChange}\n                onKeyUp={handleKeyUp}\n              />\n            </div>\n            <div className={styles.time}>\n              <div>{day}</div>\n              <div>{time}</div>\n            </div>\n            <div>\n              <button\n                className={styles.exportButton}\n                onClick={exportWeights}\n              >\n                Export\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nWeightInput.propTypes = {\n  saveWeight: PropTypes.func,\n  exportWeights: PropTypes.func,\n};\n\nexport default WeightInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Weights.module.css';\n\n\nfunction Weights({ weights, deleteWeight }) {\n  function buildWeight(value) {\n    const date = new Date(value.time);\n    const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n    const timeOptions = { hour: 'numeric', minute: '2-digit' };\n    const day = date.toLocaleString('en-us', dayOptions);\n    const time = date.toLocaleString('en-us', timeOptions);\n\n    return (\n      <div key={value.time} className={styles.value}>\n        <div className={styles.weight}>\n          {value.weight}\n        </div>\n        <div className={styles.time}>\n          <div>\n            {day}\n          </div>\n          <div>\n            {time}\n          </div>\n        </div>\n        <div>\n          <button\n            className={styles.deleteButton}\n            onClick={() => deleteWeight(value.time)}\n          >\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className='weightsSection'>\n      <div className={styles.box}>\n        { weights.slice(0).reverse().map((value) => buildWeight(value)) }\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n  deleteWeight: PropTypes.func,\n};\n\nexport default Weights;\n","import React from 'react';\nimport { useLocalStorage } from '../utilities/storage';\nimport { saveData } from '../utilities/file';\nimport Averages from './Averages';\nimport Graph from './Graph';\nimport WeightInput from './WeightInput';\nimport Weights from './Weights';\n\n\nfunction App() {\n  const [weights, setWeights] = useLocalStorage('weights', []);\n\n  function saveWeight(value) {\n    setWeights([...weights, {\n      time: Date.now(),\n      weight: parseFloat(value, 10),\n    }]);\n  }\n\n  function deleteWeight(time) {\n    setWeights(weights.filter((value) => value.time !== time));\n  }\n\n  function exportWeights() {\n    saveData(weights);\n  }\n\n  return (\n    <main className='page'>\n      <WeightInput\n        saveWeight={saveWeight}\n        exportWeights={exportWeights}\n      />\n      <Weights\n        weights={weights}\n        deleteWeight={deleteWeight}\n      />\n      <div className='spacer'></div>\n      <Averages\n        weights={weights}\n      />\n      <div className='spacer'></div>\n      <Graph\n        weights={weights}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const stored = window.localStorage.getItem(key);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (err) {\n        console.error('localStorage error:', key, stored, err);\n      }\n    }\n    window.localStorage.setItem(key, JSON.stringify(initialValue));\n    return initialValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","export function saveData(data) {\n  const blob = new Blob([JSON.stringify(data)], {type: 'application/json'});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'weightData.json';\n  link.click();\n  setTimeout(function() {\n    URL.revokeObjectURL(url);\n  }, 0);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}