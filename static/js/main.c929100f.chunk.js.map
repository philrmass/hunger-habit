{"version":3,"sources":["styles/Averages.module.css","styles/WeightInput.module.css","styles/Weights.module.css","styles/Graph.module.css","utilities/average.js","components/Averages.js","components/Graph.js","components/WeightInput.js","components/Weights.js","components/App.js","utilities/storage.js","utilities/file.js","serviceWorker.js","index.js"],"names":["module","exports","computeAverages","months","map","month","sum","weights","reduce","weight","parseFloat","count","length","average","Averages","useState","setMonths","date","Date","useEffect","months2","diffsSum","diff","stdDev","Math","sqrt","year","computeStdDevs","byMonth","time","getFullYear","getMonth","monthLabel","slice","label","Object","values","groupByMonth","className","styles","box","reverse","value","key","setMonth","toLocaleString","toFixed","Weights","timeScale","graph","setGraph","timeToX","ranges","timeMin","weightToY","weightRange","weightMin","drawGraph","weightsPath","path","index","x","y","getWeightsPath","height","viewBox","timeRange","d","round","lines","line","lineClass","x1","y1","x2","y2","drawWeightLines","timeMax","dateMin","setHours","setMinutes","setSeconds","setMilliseconds","getDate","getDay","getTime","setDate","drawTimeLines","scrollLeft","graphBox","document","getElementById","scrollWidth","limits","weightPadding","weightMax","findRanges","initialValue","Infinity","wgt","findLimits","setTimeout","id","WeightInput","saveWeight","exportWeights","setValue","day","weekday","hour","minute","title","input","type","min","max","step","onChange","e","target","onKeyUp","keyCode","exportButton","onClick","deleteWeight","deleteButton","buildWeight","App","stored","window","localStorage","getItem","JSON","parse","err","console","error","setItem","stringify","useLocalStorage","setWeights","now","data","blob","Blob","url","URL","createObjectURL","link","createElement","href","download","click","revokeObjectURL","saveData","filter","Graph","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c929100f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Averages_box__4Hm3Q\",\"month\":\"Averages_month__1s4Jv\",\"date\":\"Averages_date__hayd6\",\"label\":\"Averages_label__I6gIb\",\"value\":\"Averages_value__1H6fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"WeightInput_box__2rdDN\",\"content\":\"WeightInput_content__1b9RL\",\"title\":\"WeightInput_title__2CGOw\",\"input\":\"WeightInput_input__1PUmL\",\"time\":\"WeightInput_time__iEYeq\",\"exportButton\":\"WeightInput_exportButton__1bFWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Weights_box__BOWNP\",\"value\":\"Weights_value__2_izx\",\"weight\":\"Weights_weight__XK47H\",\"time\":\"Weights_time__3l0eE\",\"deleteButton\":\"Weights_deleteButton__PcfbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Graph_box__10xRL\",\"weights\":\"Graph_weights__WCuAs\",\"normal\":\"Graph_normal__399-F\",\"minor\":\"Graph_minor__1llgy\",\"major\":\"Graph_major__1jabc\",\"year\":\"Graph_year__HVUQf\"};","export function groupByMonth(weights) {\n  const byMonth = weights.reduce((byMonth, weight) => {\n    const date = new Date(weight.time);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const monthLabel = `0${month}`.slice(-2);\n    const label = `${year}_${monthLabel}`;\n\n    if (!byMonth[label]) {\n      byMonth[label] = {\n        year,\n        month,\n        weights: [],\n      };\n    }\n    byMonth[label].weights = [...byMonth[label].weights, weight];\n    return byMonth;\n  }, {});\n\n  return Object.values(byMonth);\n}\n\nexport function computeAverages(months) {\n  return months.map((month) => {\n    const sum = month.weights.reduce((sum, weight) => sum + parseFloat(weight.weight, 10), 0);\n    const count = month.weights.length;\n    const average = sum / count;\n    return {\n      ...month,\n      count,\n      average,\n    };\n  });\n}\n\nexport function computeStdDevs(months) {\n  return months.map((month) => {\n    const diffs = month.weights.map((weight) => parseFloat(weight.weight, 10) - month.average);\n    const diffsSum = diffs.reduce((sum, diff) => sum + (diff * diff), 0);\n    const stdDev = Math.sqrt(diffsSum / month.count);\n    return {\n      year: month.year,\n      month: month.month,\n      count: month.count,\n      average: month.average,\n      stdDev,\n    };\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Averages.module.css';\nimport { groupByMonth, computeAverages, computeStdDevs } from '../utilities/average';\n\n\nfunction Averages({ weights }) {\n  const [months, setMonths] = useState([]);\n  const date = new Date();\n\n  useEffect(() => {\n    const months0 = groupByMonth(weights);\n    const months1 = computeAverages(months0);\n    const months2 = computeStdDevs(months1);\n    setMonths(months2);\n  }, [weights]);\n\n  return (\n    <section className='averagesSection'>\n      <div className={styles.box}>\n        <ul>\n          {months.slice(0).reverse().map((value) => (\n            <li key={`${value.year}_${value.month}`}>\n              <div className={styles.month}>\n                <div className={styles.date}>\n                  {(new Date(date.setMonth(value.month - 1))).toLocaleString('en', { month: 'long' })} {value.year}\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Average\n                  </span>\n                  <span className={styles.value}>\n                    {value.average.toFixed(1)}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Measurements\n                  </span>\n                  <span className={styles.value}>\n                    {value.count}\n                  </span>\n                </div>\n                <div>\n                  <span className={styles.label}>\n                    Std Dev\n                  </span>\n                  <span className={styles.value}>\n                    {value.stdDev.toFixed(1)}\n                  </span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n}\n\nAverages.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Averages;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Graph.module.css';\n\n\nfunction Weights({ weights }) {\n  const oneDay = 1000 * 60 * 60 * 24;\n  const timeScale = 4 * oneDay;\n  const [graph, setGraph] = useState(null);\n\n  function findLimits(weights) {\n    const initialValue = {\n      timeMin: Infinity,\n      timeMax: 0,\n      weightMin: Infinity,\n      weightMax: 0,\n    };\n    return weights.reduce((limits, weight) => {\n      limits.timeMin = (weight.time < limits.timeMin) ? weight.time : limits.timeMin;\n      limits.timeMax = (weight.time > limits.timeMax) ? weight.time : limits.timeMax;\n      const wgt = parseFloat(weight.weight, 10);\n      limits.weightMin = (wgt < limits.weightMin) ? wgt : limits.weightMin;\n      limits.weightMax = (wgt > limits.weightMax) ? wgt : limits.weightMax;\n      return limits;\n    }, initialValue);\n  }\n\n  function findRanges(limits) {\n    const range = limits.weightMax - limits.weightMin;\n    const weightPadding = 0.1 * range;\n    const weightMin = limits.weightMin - weightPadding;\n    const weightMax = limits.weightMax + weightPadding;\n    const weightRange = weightMax - weightMin;\n    const timeMin = limits.timeMin / timeScale;\n    const timeMax = limits.timeMax / timeScale;\n    const timeRange = timeMax - timeMin;\n\n    return {\n      weightMin,\n      weightRange,\n      timeMin,\n      timeRange,\n    };\n  }\n\n  function timeToX(time, ranges) {\n    return (time / timeScale) - ranges.timeMin;\n  }\n\n  function weightToY(weight, ranges) {\n    const value = parseFloat(weight, 10);\n    return ranges.weightRange + ranges.weightMin - value;\n  }\n\n  function drawTimeLines(ranges) {\n    const timeMin = timeScale * ranges.timeMin;\n    const timeMax = timeScale * (ranges.timeMin + ranges.timeRange);\n    const dateMin = new Date(timeMin);\n    const date = new Date(timeMax);\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    let lines = [];\n    while (date >= dateMin) {\n      let lineClass = 'normal';\n      if (date.getDate() === 1) {\n        if (date.getMonth() === 0) {\n          lineClass = 'year';\n        } else {\n          lineClass = 'major';\n        }\n      }\n      if (date.getDay() === 0) {\n        lineClass = 'minor';\n      }\n      const x = timeToX(date.getTime(), ranges);\n      lines = [...lines, [x, lineClass]];\n      date.setDate(date.getDate() - 1);\n    }\n    return lines.map((value) => {\n      return (\n        <line key={value[0]} x1={value[0]} y1='0' x2={value[0]} y2={ranges.weightRange} className={styles[value[1]]}/>\n      );\n    });\n  }\n\n  function drawWeightLines(ranges) {\n    let value = Math.round(ranges.weightMin + ranges.weightRange);\n    let lines = [];\n    while (value >= ranges.weightMin) {\n      lines = [...lines, value];\n      value -= 1;\n    }\n    return lines.map((line) => {\n      let lineClass = 'normal';\n      if ((line % 10) === 0) {\n        lineClass = 'major';\n      } else if ((line % 5) === 0) {\n        lineClass = 'minor';\n      }\n      const y = weightToY(line, ranges);\n      return (\n        <line key={y} x1='0' y1={y} x2={ranges.timeRange} y2={y} className={styles[lineClass]}/>\n      );\n    });\n  }\n\n  function getWeightsPath(weights, ranges) {\n    return weights.reduce((path, value, index) => {\n      const x = timeToX(value.time, ranges);\n      const y = weightToY(value.weight, ranges);\n      path += (index === 0) ? 'M ' : 'L ';\n      path += `${x.toFixed(2)} ${y.toFixed(2)}`;\n      return path;\n    }, '');\n  }\n\n  function drawGraph(weights, ranges) {\n    const weightsPath = getWeightsPath(weights, ranges);\n    return (\n      <svg height='100%' viewBox={`0 0 ${ranges.timeRange} ${ranges.weightRange}`}>\n        <path d={weightsPath} className={styles.weights} />\n        {drawWeightLines(ranges)}\n        {drawTimeLines(ranges)}\n      </svg>\n    );\n  }\n\n  function scrollLeft() {\n    var graphBox = document.getElementById('graphBox');\n    graphBox.scrollLeft += graphBox.scrollWidth;\n  }\n\n  useEffect(() => {\n    const limits = findLimits(weights);\n    const ranges = findRanges(limits);\n    setGraph(drawGraph(weights, ranges));\n    setTimeout(scrollLeft, 0);\n  }, [weights]);\n\n  return (\n    <section className='graphSection'>\n      <div id='graphBox' className={styles.box}>\n        {graph}\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Weights;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/WeightInput.module.css';\n\n\nfunction WeightInput({ saveWeight, exportWeights }) {\n  const [value, setValue] = useState('');\n  const date = new Date();\n  const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n  const timeOptions = { hour: 'numeric', minute: '2-digit' };\n  const day = date.toLocaleString('en-us', dayOptions);\n  const time = date.toLocaleString('en-us', timeOptions);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      saveWeight(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <section className='weightInputSection'>\n      <div className={styles.box}>\n        <div>\n          <div className={styles.title}>\n            Add Current Weight\n          </div>\n          <div className={styles.input}>\n            <div>\n              <input\n                id='yo'\n                type='number'\n                min='0'\n                max='1000'\n                step='0.1'\n                value={value}\n                onChange={handleChange}\n                onKeyUp={handleKeyUp}\n              />\n            </div>\n            <div className={styles.time}>\n              <div>{day}</div>\n              <div>{time}</div>\n            </div>\n            <div>\n              <button\n                className={styles.exportButton}\n                onClick={exportWeights}\n              >\n                Export\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nWeightInput.propTypes = {\n  saveWeight: PropTypes.func,\n  exportWeights: PropTypes.func,\n};\n\nexport default WeightInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Weights.module.css';\n\n\nfunction Weights({ weights, deleteWeight }) {\n  function buildWeight(value) {\n    const date = new Date(value.time);\n    const dayOptions = { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' };\n    const timeOptions = { hour: 'numeric', minute: '2-digit' };\n    const day = date.toLocaleString('en-us', dayOptions);\n    const time = date.toLocaleString('en-us', timeOptions);\n\n    return (\n      <div key={value.time} className={styles.value}>\n        <div className={styles.weight}>\n          {value.weight}\n        </div>\n        <div className={styles.time}>\n          <div>\n            {day}\n          </div>\n          <div>\n            {time}\n          </div>\n        </div>\n        <div>\n          <button\n            className={styles.deleteButton}\n            onClick={() => deleteWeight(value.time)}\n          >\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className='weightsSection'>\n      <div className={styles.box}>\n        { weights.slice(0).reverse().map((value) => buildWeight(value)) }\n      </div>\n    </section>\n  );\n}\n\nWeights.propTypes = {\n  weights: PropTypes.arrayOf(PropTypes.object),\n  deleteWeight: PropTypes.func,\n};\n\nexport default Weights;\n","import React from 'react';\nimport { useLocalStorage } from '../utilities/storage';\nimport { saveData } from '../utilities/file';\nimport Averages from './Averages';\nimport Graph from './Graph';\nimport WeightInput from './WeightInput';\nimport Weights from './Weights';\n\n\nfunction App() {\n  const [weights, setWeights] = useLocalStorage('weights', []);\n\n  function saveWeight(value) {\n    setWeights([...weights, {\n      time: Date.now(),\n      weight: parseFloat(value, 10),\n    }]);\n  }\n\n  function deleteWeight(time) {\n    setWeights(weights.filter((value) => value.time !== time));\n  }\n\n  function exportWeights() {\n    saveData(weights);\n  }\n\n  return (\n    <main className='page'>\n      <WeightInput\n        saveWeight={saveWeight}\n        exportWeights={exportWeights}\n      />\n      <Weights\n        weights={weights}\n        deleteWeight={deleteWeight}\n      />\n      <div className='spacer'></div>\n      <Averages\n        weights={weights}\n      />\n      <div className='spacer'></div>\n      <Graph\n        weights={weights}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const stored = window.localStorage.getItem(key);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (err) {\n        console.error('localStorage error:', key, stored, err);\n      }\n    }\n    window.localStorage.setItem(key, JSON.stringify(initialValue));\n    return initialValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","export function saveData(data) {\n  const blob = new Blob([JSON.stringify(data)], {type: 'application/json'});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'weightData.json';\n  link.click();\n  setTimeout(function() {\n    URL.revokeObjectURL(url);\n  }, 0);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}